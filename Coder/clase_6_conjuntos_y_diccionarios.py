# -*- coding: utf-8 -*-
"""Clase 6: Conjuntos y Diccionarios

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19yoRkXHW1bB9FnaQWLlw66XNOcYNiX-L

##Cantidad desconocida de repeticiones y condiciones: while

##Cantidad conocida o exacta de repeticiones: for

#REPASO 1:
Crear un programa que solo permite ingresar numeros impares, al ingresar un numero par se cierra.
"""

numero = 1
#   Resto de dividir
while (numero % 2 == 1):  #la condicion indica si el numero es impar

  numero = int (input("INGRESAR UN IMPAR:"))

"""#REPASO 2:
Crear un programa que nos pida ingresar un numero del 10 al 20, si el numero no esta en ese rango lo vuelve a pedir. Una vez ingresado se verifica si esta o no en la lista [11, 13,19,18,17]
"""

numero = 21

lista = [11, 13,19,18,17]

while (not 10<=numero<=20):

  numero = int (input("Ingresar un numero entre 10 y 20: \n"))

for elemento in lista:

      if (numero == elemento):

        print("EXCELENTEEE!!!, el numero estaba en la lista")

"""#REPASO 3:
El usuario selecciona cuantos numeros desea ingresar, luego empieza a elegirlos. Una vez terminado el ingreso se muestra la suma de los números.
"""

cantidadDeNumeros = int (input("Cheee, cuantos numeros queres???:"))

suma = 0

for i in range(0, cantidadDeNumeros):

    suma += int (input("Ingresa uno de tus numeros!!!"))


print(f"La suma de tus numeros es: {suma}")

for x in range(21):
  print(x*5)

for x in range(50,60):
  print(x)

for x in range(0,101,5):
  print(x)

"""#REPASO 4:
Crear un programa que permita ingresar dos numeros decimales y a continuación nos deje elegir entre estas opciones:

1- Mostrar la suma 2- Mostrar el maximo 3- Salir "Cualquier otra opción no es válida"
"""

#decimal1 = float (input("Ingresar un numero decimal :) : \n\n"))
#decimal2 = float (input("Ingresar un numero decimal :) : \n\n"))

decimal1 = 12.3
decimal2 = 22.7

opcion = -1

while True:

    opcion = int (input("Ingresar una opción:\n 1-SUMAR, 2-Maximo, 3-Salir"))

    if (opcion == 1):

      suma = decimal1 + decimal2
      print(f"Genial la suma es: {suma}")

    elif (opcion == 2):

      maximo = decimal1

      if ( decimal1<decimal2):

        maximo = decimal2

      print(f"Que genial que el maximo sea: {maximo}")

    elif opcion==3:
      break
    
    else:
      print("Ingrese un numero correcto!")

"""#Grupos y Diccionarios"""

conjunto = {1,2,3,4}  #Creando el conjunto de numeros 1 2 3 y 4

#print(conjunto[2])  #no puedo acceder a un orden específico del conjunto porque NO ESTÁN ORDENADOS!!!

#lista = [20,12]

#print(set(lista)) #set() convierte una lista o tupla o range a conjunto

#Listas: Ordenadas (tienen índice) y las podemos modificar
#Tuplas: Ordenadas - No las podemos modificar
#Conjuntos: No tienen orden - Podemos modificarlos

#set([1, 1, 2, 2, 3, 3, 4, 4]) #no admite elementos repetidos

conjunto.add(4)
tup = (9,10)

conjunto.update(tup)  #update permite añadir listas tuplas range o cunjutos a un conjunto ya creado.

print(len(conjunto))  #len permite hallar la cantidad de elementos del conjunto.

conjunto2 = {"hola","estoy","en","clase",6}
conjunto2.discard(6)  #eliminar un elemento del conjunto

#conjunto2.remove(10)  #bota error
conjunto2.discard(10)

for elemento in conjunto2:
  print(elemento)

conjunto2.clear() #borrando todos los elementos del conjunto
print(conjunto2)

#Diccionarios

alumnos_python = {1:"Vazquez",2:"Juarez","DNI":9999999} #Una manera de crear dict
alumnos_python2 = dict(Alfredo="Villareal", Ana="Simone", Andrea="Marquez") #Otra manera de crear dict

print(alumnos_python)
alumnos_python2["Andrea"]="M"
print(alumnos_python2)

#Desafío 1

grupo = {"Miguel", "Blanca", "Mario", "Andrés"}

grupo.update({"Ana","Ramón", "Marta", "Eric", "David"})

grupo.discard("Mario")
grupo.discard("Miguel")
grupo.discard("Esteban")  #no le hace caso a pesar que no existe en el conjunto
#grupo.remove("Esteban") #acá si bota error
print(grupo)

#Desafío 2

animales = {"elefante": ""}

animales["perro"]="Bobby" #Similar a un add de conjuntos ya que añado de 1 en 1.

animales.update(tigre="Peepe",mono="homero")

animales["elefante"]="Trompis"  #Podemos modificar valores de claves ya existentes.
animales["delfín"]="Manolo"   #Si la clave no existía, creamos una clave con su valor.
print(animales)