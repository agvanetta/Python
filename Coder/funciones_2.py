# -*- coding: utf-8 -*-
"""Funciones 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LOPtJeZ-hq9sVgicaKckmzjAmAyYGMiM
"""

def sumar(a, b):  #al definir (crear) la función uso los parámetros.
  print(a+b)

sumar(20,2) #al llamar a la funcion tengo los argumentos (datos)

import math #math se refiere a varios funciones/programas ya creados que podemos utilizar

print(round(math.pi,2))

import random #para generar aleatoriedad

print(random.random())

def saludar(nom1, nom2, ap1, ap2):
  return f"Hola {nom1} {nom2}. Mucho gusto, {ap1} {ap2}"

saludar("Juan","Pablo","Ribero","Mazzoni")

numero1=15
numero2=2

def resta(numero1, numero2):
  return numero1-numero2

#resta(2,15) #llamada de argumentos por posición (orden importa)
resta(numero2=2, numero1=15)  #llamada de argumentos por nombre

def gradosF(gradosC):
  resultado = gradosC*1.8 + 32
  return resultado

print(gradosF(5))

n = 10

def crear():
  global n    #de esta manera le doy permiso a la función para que modifique el valor de una variable global (que está afuera)
  n1=2

crear()

print(n)

def resta(a=None, b=None):
  if a == None or b == None:
    return  "Error, debes enviar dos números a la función"
  return a - b
resultado = resta()

def doblar_valor(numero):
  numero *= 2
  print(numero)


n1 = int(input("Ingresa un numero: "))
n2 = int(input("Ingresa otro numero: "))
print(n1+n2)
print(n1**n2)

doblar_valor(n1)

print(n1/n2)

def doblar_valores(numeros):
  for x in range(len(lista1)):
    numeros[x] *= 2
  return numeros

lista1 = [2,5,7]

resultado = doblar_valores(lista1)

print(resultado)

lista1 = [2,5,7]

list(enumerate(lista1))

def saludos(**kwargs):
  print("Hola")

saludos(nombre="Juan")

def calcular(*args):
	if len(args)==1:
		return calcular_horas(args[0])
	elif len(args)==3:
		return calcular_segundos(*args)
	else:
		raise TypeError("Se espera 1 o 3 parámetros")
 
 
def calcular_horas(segundos):
  horas = int(segundos/3600)
  segundos -= horas*3600
  minutos = int(segundos/60)
  segundos -= minutos*60
  return f"{horas}:{minutos}:{segundos}"
 
def calcular_segundos(hor, min, seg):
  seg += hor*3600
  seg += min*60
  return seg
 
 
print(calcular(10000))
#print(calcular(2,3))  #bota error
print(calcular(3,2,3))