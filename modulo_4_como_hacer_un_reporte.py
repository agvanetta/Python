# -*- coding: utf-8 -*-
"""Modulo 4: Como hacer un reporte

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10h-M88ZMp-xqOr-gscblPgbGUHG-WBYE
"""

pip install yfinance

# Medias moviles simples
import yfinance as yf

df = yf.download("ggal" , auto_adjust = True)

df["sma3"] = df.Close.rolling(3).mean()
df

for n in [ 3 , 6 , 9]:
  df[f"sma{n}"] = df.Close.rolling(n).mean()

df

"""MACD"""

import yfinance as yf

df = yf.download("ggal", auto_adjust=True)

'''
El MACD toma la columna "Close" para hacer los calculos. Enviar datos ajustados
'''
df = df["2021-05":].copy()

fast = 9
slow = 26
suavizado = 9

df['ema_fast'] = df.Close.ewm(span=fast).mean()
df['ema_slow'] = df["Close"].ewm(span=slow).mean()
df['macd'] = df.ema_fast - df.ema_slow
df['signal'] = df.macd.rolling(suavizado).mean()
df['histograma'] = df.macd - df.signal
df = df.dropna().round(2)
df

"""Bandas de Bollinger"""

df  = yf.download("AAPL", auto_adjust=True)

df['sma_20'] = df["Close"].rolling(20).mean()
volatilidad = df["Close"].rolling(20).std()
df['boll_inf'] = df.sma_20 - 2 * volatilidad
df['boll_sup'] = df.sma_20 + 2 * volatilidad
df.dropna(inplace=True)
df

"""Graficos con Pandas"""

# https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.html

df.Close.plot(figsize=(8, 5), legend=True)

# Grafico de cruces de medias

df = yf.download("AAPL", auto_adjust=True)

for x in [3,9,18]:
  df[f"sma{x}"] = df.Close.rolling(x). mean()


df = df["2020-01":].copy()
df["Price"] = df.Close
df.Price.plot(color="b", ls="--", legend=True)
df.sma3.plot(color="green",legend=True) 
df.sma9.plot(color="r",legend=True)
df.sma18.plot(color="y", title="Cruce 3,9 y 18", figsize= (8,5), grid= True, legend=True)

#Grafico de barras

import yfinance as yf

df = yf.download("AAPL", auto_adjust=True)

df["gap"] = (df.Open > df.Close.shift()) 
frame = df.groupby("gap").size()
print(frame)
frame = frame.to_frame().transpose()
print(frame)
frame.columns = ["Sin Gap","Con Gap"]

frame.plot(kind="bar", figsize=(8,5), color=["r","g"])

"""Histograma"""

##Histograma
##Â https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.hist.html
import yfinance as yf

df = yf.download("ggal", start="2019-01-01", auto_adjust=True)
df.sort_values("Close")

df.Close.hist( color="g", legend=True, bins = 100, figsize=(6,4))

"""Histograma desde Plot"""

df = yf.download('X')
df['variacion'] = df['Adj Close'].pct_change()
df.variacion.plot(kind='hist', bins=100)